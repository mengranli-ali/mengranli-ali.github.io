<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mengran&apos;s Blog</title>
    <description>Based in London</description>
    <link>https://mengranli-ali.github.io/</link>
    <atom:link href="https://mengranli-ali.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 18 Jul 2021 22:46:53 +0100</pubDate>
    <lastBuildDate>Sun, 18 Jul 2021 22:46:53 +0100</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Python Basics 1: Class, Object, Variables, Modules, Packages</title>
        <description>&lt;h3 id=&quot;class--instance&quot;&gt;Class &amp;amp; Instance&lt;/h3&gt;

&lt;p&gt;在专业术语上,我们将类别称做类型(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class&lt;/code&gt;),而个体叫做实例(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instance&lt;/code&gt;)。&lt;/p&gt;

&lt;p&gt;存活的实例对象都有个 “唯一” 的 ID 值。&lt;/p&gt;

&lt;p&gt;可用 type 返回实例所属类型。&lt;/p&gt;

&lt;p&gt;如要判断实例是否属于特定类型,须用 isinstance 函数。&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;issubclass&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Liger&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; object&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;事实上,所有类型都有一个共同祖先类型 object,它为所有类型提供原始模版,以及系统 所需的基本操作方式。&lt;/p&gt;

&lt;p&gt;区别在于,所有类型对 象都是 type 的实例,这与继承关系无关。&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; issubclass&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;Liger&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; object&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
True

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; id&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;int&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4486772160&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;int&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;class &lt;span class=&quot;s1&quot;&gt;&apos;type&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;names-have-no-type-but-objects-do&quot;&gt;Names have no type, but objects do.&lt;/h3&gt;

&lt;p&gt;在 Python 这类动态语言里,&lt;strong&gt;Name&lt;/strong&gt;和&lt;strong&gt;Object&lt;/strong&gt;是两个实体。&lt;/p&gt;

&lt;p&gt;名字不但有自己的类型,要分配内存,还会介入实际执行过程。甚至可以说,名字才是其动态执行模型的基础。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;名字必须与目标对象关联起来才有意义。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;赋值操作步骤：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;准备好右值目标对象(比如上例中的整数对象 100)。&lt;/li&gt;
  &lt;li&gt;准备好名字(通常是常量,保存在特定列表里。比如 x)。&lt;/li&gt;
  &lt;li&gt;在名字空间(namespace)里为两者建立关联。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;赋值操作仅仅是让名字在名字空间NameSpaces里重新关联,而非修改原对象。
但是一个名字只能引用一个对象。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;An object is allowed to have multiple names,无论是在相同或不同的名字空间里。&lt;/p&gt;
&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1234&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;x&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt; 
True
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相等操作符=并不能确定两个名字指向同一对象&lt;/p&gt;

&lt;p&gt;这涉及到操作符重载,或许它被设定为比较值是否相等。&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1234&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1234&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;b&lt;/span&gt; # 指向 同对象。 
False

&lt;span class=&quot;p&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;b&lt;/span&gt; # 值相等。 
True
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;variable-变量&quot;&gt;Variable 变量&lt;/h3&gt;

&lt;p&gt;变量多次赋值:&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# &lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;赋值给&lt;span class=&quot;k&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;123&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;模块module包package库library应用application框架framework&quot;&gt;模块（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Module&lt;/code&gt;）、包（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Package&lt;/code&gt;）、库（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Library&lt;/code&gt;）、应用（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Application&lt;/code&gt;）、框架（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Framework&lt;/code&gt;）&lt;/h3&gt;

&lt;p&gt;「函数」和「类」组成了「模块」，多个「模块」组成了「包」，多个「包」或者多个「模块」组成了「应用程序」，「应用程序」具有某些特定功能且作为依赖提供给其他项目使用叫作「库」，提供某一领域解决方案的「库」叫框架。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;引用模块 / 包：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;import 的本质是路径搜索。使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;import module_name&lt;/code&gt; 语句导入。&lt;/p&gt;

&lt;p&gt;import 引用可以是模块&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; module&lt;/code&gt;，或者包 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;模块 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; 和包 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package &lt;/code&gt;是个体和集合的关系: 模块是一个个体，里面包含了函数 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;function&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;包 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package&lt;/code&gt; 就是多个模块 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; 的集合&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; collection&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;如何引入？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;针对 module，实际上是引用一个.py 文件。&lt;/p&gt;

&lt;p&gt;而针对 package，可以采用 from … import …的方式，这里实际上是从一个目录中引用模块，这时目录结构中必须带有一个 &lt;strong&gt;init&lt;/strong&gt;.py 文件。&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# 导入一个模块
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; model_name
# 导入多个模块
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; module_name1&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;module_name2
# 导入包中指定模块 
from package_name &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; moudule_name
# 导入包中所有模块 
from package_name &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; *

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;input-and-output&quot;&gt;Input and Output&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raw_input&lt;/code&gt; 是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python2.7&lt;/code&gt; 的输入函数，在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python3.x &lt;/code&gt;里可以直接使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; input&lt;/code&gt;赋值给变量 name&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;print &lt;/code&gt;是输出函数，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%name &lt;/code&gt;代表变量的数值，因为是字符串 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string &lt;/code&gt;类型，所以在前面用的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%s &lt;/code&gt;作为代替。&lt;/p&gt;

&lt;p&gt;如果变量数值是字符串&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; string&lt;/code&gt; 类型，则用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%s &lt;/code&gt;代替&lt;/p&gt;

&lt;p&gt;如果变量数值是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;integer&lt;/code&gt; 类型，则用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; %d &lt;/code&gt;代替&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
name &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; raw_input&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;What&apos;s your name?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
sum &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hello,%s&apos;&lt;/span&gt; %name&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;sum = %d&apos;&lt;/span&gt; %sum&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

_what&apos;s your name? _alicia_
hello&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; alicia
sum &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt;_
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;comment&quot;&gt;Comment&lt;/h3&gt;

&lt;p&gt;注释 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comment&lt;/code&gt; 在 python 中使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果注释中有中文，一般会在代码前添加 ` - coding: utf-8 -`&lt;/p&gt;

&lt;p&gt;如果是多行注释，使用三个单引号，或者三个双引号&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
# &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;*&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; coding&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; utf&lt;span class=&quot;m&quot;&gt;-8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;*

&lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;&apos;
这是多行注释，用三个单引号
这是多行注释，用三个单引号 
这是多行注释，用三个单引号
&lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;&apos;&quot;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 18 Jul 2021 00:00:00 +0100</pubDate>
        <link>https://mengranli-ali.github.io/2021/07/18/python-basics-def/</link>
        <guid isPermaLink="true">https://mengranli-ali.github.io/2021/07/18/python-basics-def/</guid>
        
        <category>Python</category>
        
        <category>Data Analysis</category>
        
        
      </item>
    
      <item>
        <title>First Article for Test</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Take it easy, it’s just a test!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;「&lt;strong&gt;Test is fun&lt;/strong&gt;」:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;「&lt;strong&gt;We all need a test&lt;/strong&gt;」Nodmcjendjdjja ddjdjjdjdebc&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;「&lt;strong&gt;Hello guys&lt;/strong&gt;」&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 16 Jul 2021 13:00:00 +0100</pubDate>
        <link>https://mengranli-ali.github.io/2021/07/16/first-article-test/</link>
        <guid isPermaLink="true">https://mengranli-ali.github.io/2021/07/16/first-article-test/</guid>
        
        <category>Test</category>
        
        
      </item>
    
  </channel>
</rss>
